services:
  apache:
    container_name: apache
    build:
      context: apache
    volumes:
      - ${WWW_DIRECTORY}:/var/www/ips:ro
      - ${LOGS_DIRECTORY}/apache:/usr/local/apache2/logs
      - ${CERTBOT_WWW_DIRECTORY}:/var/www/certbot:ro
      - certificates:/etc/letsencrypt:ro
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      TZ: ${TIMEZONE}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - php
    restart: unless-stopped

  php:
    container_name: php
    build:
      context: php
    volumes:
      - ${WWW_DIRECTORY}:/var/www/ips
      - ${LOGS_DIRECTORY}/php:/usr/local/var/log
    environment:
      TZ: ${TIMEZONE}
    depends_on:
      - mariadb
      - redis
    restart: unless-stopped

  mariadb:
    container_name: mariadb
    build:
      context: mariadb
    volumes:
      - database:/var/lib/mysql
      - ${LOGS_DIRECTORY}/mariadb:/var/log/mysql
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      TZ: ${TIMEZONE}
    restart: unless-stopped

  redis:
    container_name: redis
    build:
      context: redis
    volumes:
      - ${LOGS_DIRECTORY}/redis:/var/log/redis
    environment:
      TZ: ${TIMEZONE}
    restart: unless-stopped

  cron:
    container_name: cron
    build:
      context: cron
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${LOGS_DIRECTORY}/cron:/var/log
    environment:
      TZ: ${TIMEZONE}
    depends_on:
      - apache
      - php
    restart: unless-stopped

  logrotate:
    container_name: logrotate
    build:
      context: logrotate
    volumes:
      - ${LOGS_DIRECTORY}:/var/log
    environment:
      TZ: ${TIMEZONE}

  certbot:
    container_name: certbot
    build:
      context: certbot
    volumes:
      - ${CERTBOT_WWW_DIRECTORY}:/var/www/certbot
      - certificates:/etc/letsencrypt
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      TZ: ${TIMEZONE}
    depends_on:
      - apache
    restart: unless-stopped

  alloy:
    container_name: alloy
    build:
      context: alloy
    privileged: true
    volumes:
      - monitoring:/var/lib/alloy/data
      - ${LOGS_DIRECTORY}:/var/log
      - /:/host:ro
      - /sys:/sys:ro
      - /var/run:/var/run:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      PROMETHEUS_ENDPOINT: ${PROMETHEUS_ENDPOINT}
      PROMETHEUS_USER: ${PROMETHEUS_USER}
      PROMETHEUS_PASSWORD: ${PROMETHEUS_PASSWORD}
      LOKI_ENDPOINT: ${LOKI_ENDPOINT}
      LOKI_USER: ${LOKI_USER}
      LOKI_PASSWORD: ${LOKI_PASSWORD}
      TZ: ${TIMEZONE}
    ports:
      - "12345:12345"
    restart: unless-stopped

volumes:
  database:
  certificates:
  monitoring:
