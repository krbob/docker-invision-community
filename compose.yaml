services:
  apache:
    container_name: apache
    build:
      context: apache
    volumes:
      - ${WWW_DIRECTORY}:${WWW_DIRECTORY}:ro
      - ${LOGS_DIRECTORY}/apache:/usr/local/apache2/logs
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      WWW_DIRECTORY: ${WWW_DIRECTORY}
      TZ: ${TIMEZONE}
    ports:
      - "80:80"
    depends_on:
      - php
    restart: unless-stopped

  php:
    container_name: php
    build:
      context: php
    volumes:
      - ${WWW_DIRECTORY}:${WWW_DIRECTORY}
      - ${LOGS_DIRECTORY}/php:/usr/local/var/log
    environment:
      WWW_DIRECTORY: ${WWW_DIRECTORY}
      TZ: ${TIMEZONE}
    depends_on:
      - mariadb
    restart: unless-stopped

  mariadb:
    container_name: mariadb
    build:
      context: mariadb
    volumes:
      - database:/var/lib/mysql
      - ${LOGS_DIRECTORY}/mariadb:/var/log/mysql
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      TZ: ${TIMEZONE}
    restart: unless-stopped

  cron:
    container_name: cron
    build:
      context: cron
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${LOGS_DIRECTORY}/cron:/var/log
    environment:
      TZ: ${TIMEZONE}
    depends_on:
      - php
    restart: unless-stopped

  logrotate:
    container_name: logrotate
    build:
      context: logrotate
    volumes:
      - ${LOGS_DIRECTORY}:/var/log

volumes:
  database:


